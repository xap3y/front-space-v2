{
    "openapi": "3.0.0",
    "info": {
        "title": "Space API",
        "description": "- [API](https://call.xap3y.space)\n- [GitHub Repository](https://github.com/xap3y/space-api)",
        "version": "1.0-beta.23"
    },
    "servers": [
        {
            "url": "https://call.xap3y.space/v1"
        }
    ],
    "paths": {
        "/image/upload/zip": {
            "post": {
                "summary": "Upload a ZIP archive of images",
                "tags": ["Image"],
                "security": [{ "apiKeyAuth": [] }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": { "type": "string", "format": "binary" }
                                },
                                "required": ["file"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Archive processed",
                        "content": {
                            "application/json": { "schema": { "$ref": "#/components/schemas/StandardResponseEnvelope" } },
                            "text/plain": { "schema": { "type": "string" } }
                        }
                    },
                    "400": { "$ref": "#/components/responses/BadRequest" },
                    "401": { "$ref": "#/components/responses/Unauthorized" },
                    "500": { "$ref": "#/components/responses/InternalError" }
                }
            }
        },
        "/image/register": {
            "post": {
                "summary": "Register an image record (metadata only)",
                "tags": ["Image"],
                "security": [{ "apiKeyAuth": [] }],
                "parameters": [
                    { "name": "uniqueId", "in": "query", "schema": { "type": "string" } },
                    { "name": "fileType", "in": "query", "schema": { "type": "string" } },
                    { "name": "size", "in": "query", "schema": { "type": "integer", "format": "int64" } },
                    { "name": "private", "in": "query", "schema": { "type": "boolean" } },
                    { "name": "password", "in": "query", "schema": { "type": "string" } },
                    { "name": "desc", "in": "query", "schema": { "type": "string", "maxLength": 200 } },
                    { "name": "source", "in": "query", "schema": { "type": "string" } }
                ],
                "responses": {
                    "200": { "$ref": "#/components/responses/UploadedResource" },
                    "400": { "$ref": "#/components/responses/BadRequest" },
                    "401": { "$ref": "#/components/responses/Unauthorized" },
                    "500": { "$ref": "#/components/responses/InternalError" }
                }
            }
        },
        "/image/upload/cloud": {
            "post": {
                "summary": "Upload image directly to cloud storage (S3-compatible)",
                "tags": ["Image"],
                "security": [{ "apiKeyAuth": [] }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": { "type": "string", "format": "binary" },
                                    "uniqueId": { "type": "string" },
                                    "private": { "type": "boolean" },
                                    "password": { "type": "string" },
                                    "desc": { "type": "string", "maxLength": 200 },
                                    "source": { "type": "string" }
                                },
                                "required": ["file"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": { "$ref": "#/components/responses/UploadedResource" },
                    "400": { "$ref": "#/components/responses/BadRequest" },
                    "401": { "$ref": "#/components/responses/Unauthorized" },
                    "500": { "$ref": "#/components/responses/InternalError" }
                }
            }
        },
        "/image/generate-upload-url": {
            "post": {
                "summary": "Generate a presigned PUT URL for direct upload",
                "tags": ["Image"],
                "security": [{ "apiKeyAuth": [] }],
                "parameters": [
                    { "name": "contentType", "in": "query", "required": false, "schema": { "type": "string" } }
                ],
                "responses": {
                    "200": {
                        "description": "Presigned URL generated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "uid": { "type": "string" },
                                        "url": { "type": "string", "format": "uri" },
                                        "method": { "type": "string", "enum": ["PUT"] }
                                    },
                                    "required": ["uid", "url", "method"]
                                }
                            }
                        }
                    },
                    "401": { "$ref": "#/components/responses/Unauthorized" }
                }
            }
        },
        "/image/upload": {
            "post": {
                "summary": "Upload an image",
                "tags": ["Image"],
                "security": [{ "apiKeyAuth": [] }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": { "type": "string", "format": "binary" },
                                    "uniqueId": { "type": "string" },
                                    "private": { "type": "boolean" },
                                    "password": { "type": "string", "minLength": 3, "maxLength": 100, "pattern": "^[a-zA-Z0-9]*$" },
                                    "desc": { "type": "string", "maxLength": 200 },
                                    "source": { "type": "string" }
                                },
                                "required": ["file"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": { "$ref": "#/components/responses/UploadedResource" },
                    "400": { "$ref": "#/components/responses/BadRequest" },
                    "401": { "$ref": "#/components/responses/Unauthorized" },
                    "500": { "$ref": "#/components/responses/InternalError" }
                }
            }
        },
        "/image/get/{uniqueId}": {
            "get": {
                "summary": "Get an image or its base64 by unique ID",
                "tags": ["Image"],
                "parameters": [
                    { "name": "uniqueId", "in": "path", "required": true, "schema": { "type": "string" } },
                    { "name": "base64", "in": "query", "schema": { "type": "boolean", "default": false } },
                    { "name": "download", "in": "query", "schema": { "type": "boolean", "default": false } },
                    { "name": "password", "in": "query", "schema": { "type": "string" } },
                    { "name": "raw", "in": "query", "schema": { "type": "boolean", "default": false } },
                    { "name": "image_info", "in": "query", "schema": { "type": "boolean", "default": false } },
                    { "name": "info", "in": "query", "schema": { "type": "boolean", "default": false } }
                ],
                "responses": {
                    "200": {
                        "description": "Image stream, base64, or info",
                        "content": {
                            "application/json": { "schema": { "$ref": "#/components/schemas/StandardResponseEnvelope" } },
                            "text/plain": { "schema": { "type": "string" } },
                            "image/png": { "schema": { "type": "string", "format": "binary" } },
                            "image/jpeg": { "schema": { "type": "string", "format": "binary" } },
                            "image/gif": { "schema": { "type": "string", "format": "binary" } },
                            "application/octet-stream": { "schema": { "type": "string", "format": "binary" } },
                            "video/mp4": { "schema": { "type": "string", "format": "binary" } },
                            "image/heif": { "schema": { "type": "string", "format": "binary" } },
                            "image/heic": { "schema": { "type": "string", "format": "binary" } }
                        }
                    },
                    "302": {
                        "description": "Video redirect to /image/get/video/{uniqueId}"
                    },
                    "404": { "$ref": "#/components/responses/NotFound" }
                }
            },
            "delete": {
                "summary": "Delete an image by unique ID",
                "tags": ["Image"],
                "parameters": [{ "name": "uniqueId", "in": "path", "required": true, "schema": { "type": "string" } }],
                "security": [{ "apiKeyAuth": [] }],
                "responses": {
                    "200": { "$ref": "#/components/responses/StandardResponse" },
                    "401": { "$ref": "#/components/responses/Unauthorized" },
                    "404": { "$ref": "#/components/responses/NotFound" }
                }
            },
            "post": {
                "summary": "Get protected image info/data (with password or api key)",
                "tags": ["Image"],
                "security": [{ "apiKeyAuth": [] }],
                "parameters": [{ "name": "uniqueId", "in": "path", "required": true, "schema": { "type": "string" } }],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": { "password": { "type": "string" } }
                            }
                        }
                    }
                },
                "responses": {
                    "200": { "$ref": "#/components/responses/StandardResponse" },
                    "400": { "$ref": "#/components/responses/BadRequest" },
                    "401": { "$ref": "#/components/responses/Unauthorized" },
                    "403": { "$ref": "#/components/responses/Forbidden" }
                }
            }
        },
        "/image/info/{uniqueId}": {
            "get": {
                "summary": "Get image metadata by unique ID",
                "tags": ["Image"],
                "parameters": [{ "name": "uniqueId", "in": "path", "required": true, "schema": { "type": "string" } }],
                "responses": {
                    "200": { "$ref": "#/components/responses/UploadedResource" },
                    "404": { "$ref": "#/components/responses/NotFound" }
                }
            }
        },
        "/image/get/poster/{uniqueId}": {
            "get": {
                "summary": "Get image/video poster thumbnail",
                "tags": ["Image"],
                "parameters": [{ "name": "uniqueId", "in": "path", "required": true, "schema": { "type": "string" } }],
                "responses": {
                    "200": { "description": "Poster image", "content": { "application/octet-stream": { "schema": { "type": "string", "format": "binary" } } } },
                    "404": { "$ref": "#/components/responses/NotFound" }
                }
            }
        },
        "/image/get/video/{uniqueId}": {
            "get": {
                "summary": "Stream video with Range support",
                "tags": ["Image"],
                "parameters": [
                    { "name": "uniqueId", "in": "path", "required": true, "schema": { "type": "string" } },
                    { "name": "Range", "in": "header", "required": false, "schema": { "type": "string" } }
                ],
                "responses": {
                    "200": { "description": "Full content", "content": { "video/mp4": { "schema": { "type": "string", "format": "binary" } } } },
                    "206": { "description": "Partial content", "headers": { "Content-Range": { "schema": { "type": "string" } } } },
                    "416": { "description": "Requested Range Not Satisfiable" },
                    "404": { "$ref": "#/components/responses/NotFound" }
                }
            }
        },
        "/image/stats": {
            "get": {
                "summary": "Get aggregated image stats",
                "tags": ["Image"],
                "responses": {
                    "200": { "$ref": "#/components/responses/StandardResponse" },
                    "404": { "$ref": "#/components/responses/NotFound" }
                }
            }
        },

        "/image/playlist/get/{identifier}": {
            "get": {
                "summary": "Get image playlist by identifier",
                "tags": ["ImagePlaylist"],
                "parameters": [{ "name": "identifier", "in": "path", "required": true, "schema": { "type": "string" } }],
                "responses": {
                    "200": { "$ref": "#/components/responses/StandardResponse" },
                    "404": { "$ref": "#/components/responses/NotFound" }
                }
            }
        },
        "/image/playlist/get/{identifier}/images": {
            "put": {
                "summary": "Add images to playlist",
                "tags": ["ImagePlaylist"],
                "security": [{ "apiKeyAuth": [] }],
                "parameters": [{ "name": "identifier", "in": "path", "required": true, "schema": { "type": "string" } }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": { "schema": { "type": "object", "properties": { "imagesUids": { "type": "array", "items": { "type": "string" } } }, "required": ["imagesUids"] } }
                    }
                },
                "responses": {
                    "200": { "$ref": "#/components/responses/StandardResponse" },
                    "400": { "$ref": "#/components/responses/BadRequest" },
                    "401": { "$ref": "#/components/responses/Unauthorized" },
                    "404": { "$ref": "#/components/responses/NotFound" }
                }
            }
        },
        "/image/playlist/get/{identifier}/images/{imageUid}": {
            "delete": {
                "summary": "Remove image from playlist",
                "tags": ["ImagePlaylist"],
                "security": [{ "apiKeyAuth": [] }],
                "parameters": [
                    { "name": "identifier", "in": "path", "required": true, "schema": { "type": "string" } },
                    { "name": "imageUid", "in": "path", "required": true, "schema": { "type": "string" } }
                ],
                "responses": {
                    "200": { "$ref": "#/components/responses/StandardResponse" },
                    "400": { "$ref": "#/components/responses/BadRequest" },
                    "401": { "$ref": "#/components/responses/Unauthorized" },
                    "404": { "$ref": "#/components/responses/NotFound" }
                }
            }
        },

        "/paste/create": {
            "post": {
                "summary": "Create a paste (multipart)",
                "tags": ["Paste"],
                "security": [{ "apiKeyAuth": [] }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": { "type": "object", "properties": { "file": { "type": "string", "format": "binary" } }, "required": ["file"] }
                        }
                    }
                },
                "responses": {
                    "200": { "$ref": "#/components/responses/UploadedResourcePaste" },
                    "400": { "$ref": "#/components/responses/BadRequest" }
                }
            }
        },
        "/paste/create#json": {
            "post": {
                "summary": "Create a paste (JSON body)",
                "tags": ["Paste"],
                "operationId": "pasteCreateJson",
                "security": [{ "apiKeyAuth": [] }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": { "schema": { "type": "object", "properties": { "title": { "type": "string" }, "text": { "type": "string" } }, "required": ["text"] } }
                    }
                },
                "responses": {
                    "200": { "$ref": "#/components/responses/UploadedResourcePaste" },
                    "400": { "$ref": "#/components/responses/BadRequest" }
                }
            }
        },
        "/paste/get/{uniqueId}": {
            "get": {
                "summary": "Get a paste by unique ID",
                "tags": ["Paste"],
                "parameters": [
                    { "name": "uniqueId", "in": "path", "required": true, "schema": { "type": "string" } },
                    { "name": "raw", "in": "query", "required": false, "schema": { "type": "boolean", "default": false } }
                ],
                "responses": {
                    "200": {
                        "description": "Paste content or metadata",
                        "content": {
                            "text/plain": { "schema": { "type": "string" } },
                            "application/json": { "schema": { "$ref": "#/components/schemas/StandardResponseEnvelope" } }
                        }
                    },
                    "404": { "$ref": "#/components/responses/NotFound" }
                }
            },
            "delete": {
                "summary": "Delete a paste by unique ID",
                "tags": ["Paste"],
                "security": [{ "apiKeyAuth": [] }],
                "parameters": [{ "name": "uniqueId", "in": "path", "required": true, "schema": { "type": "string" } }],
                "responses": {
                    "200": { "$ref": "#/components/responses/StandardResponse" },
                    "401": { "$ref": "#/components/responses/Unauthorized" },
                    "404": { "$ref": "#/components/responses/NotFound" }
                }
            }
        },
        "/paste/stats": {
            "get": {
                "summary": "Get aggregate paste statistics",
                "tags": ["Paste"],
                "responses": {
                    "200": { "$ref": "#/components/responses/StandardResponse" },
                    "404": { "$ref": "#/components/responses/NotFound" }
                }
            }
        },

        "/url/create": {
            "post": {
                "summary": "Create a shortened URL",
                "tags": ["Url"],
                "security": [{ "apiKeyAuth": [] }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": { "schema": { "type": "object", "properties": {
                            "url": { "type": "string", "format": "uri" },
                            "uniqueId": { "type": "string" },
                            "maxUses": { "type": "integer", "default": -1 }
                        }, "required": ["url"] } }
                    }
                },
                "responses": {
                    "200": { "$ref": "#/components/responses/UploadedResourceShortUrl" },
                    "400": { "$ref": "#/components/responses/BadRequest" }
                }
            }
        },
        "/url/r/{uniqueId}": {
            "get": {
                "summary": "Redirect to the original URL",
                "tags": ["Url"],
                "parameters": [{ "name": "uniqueId", "in": "path", "required": true, "schema": { "type": "string" } }],
                "responses": {
                    "301": { "description": "Moved Permanently" },
                    "302": { "description": "Found" },
                    "404": { "$ref": "#/components/responses/NotFound" }
                }
            }
        },
        "/url/get/{uniqueId}": {
            "get": {
                "summary": "Get a shortened URL by unique ID",
                "tags": ["Url"],
                "parameters": [{ "name": "uniqueId", "in": "path", "required": true, "schema": { "type": "string" } }],
                "responses": {
                    "200": { "$ref": "#/components/responses/UploadedResourceShortUrl" },
                    "404": { "$ref": "#/components/responses/NotFound" }
                }
            },
            "delete": {
                "summary": "Delete a shortened URL by unique ID",
                "tags": ["Url"],
                "security": [{ "apiKeyAuth": [] }],
                "parameters": [{ "name": "uniqueId", "in": "path", "required": true, "schema": { "type": "string" } }],
                "responses": {
                    "200": { "$ref": "#/components/responses/StandardResponse" },
                    "401": { "$ref": "#/components/responses/Unauthorized" },
                    "404": { "$ref": "#/components/responses/NotFound" }
                }
            }
        },
        "/url/get/{uniqueId}/logs": {
            "get": {
                "summary": "Get visit logs for a shortened URL",
                "tags": ["Url"],
                "security": [{ "apiKeyAuth": [] }],
                "parameters": [{ "name": "uniqueId", "in": "path", "required": true, "schema": { "type": "string" } }],
                "responses": {
                    "200": { "$ref": "#/components/responses/StandardResponse" },
                    "401": { "$ref": "#/components/responses/Unauthorized" },
                    "404": { "$ref": "#/components/responses/NotFound" }
                }
            }
        },

        "/auth/me": {
            "get": {
                "summary": "Get current user via session cookie",
                "tags": ["Auth"],
                "responses": {
                    "200": { "$ref": "#/components/responses/LoggedUser" },
                    "401": { "$ref": "#/components/responses/Unauthorized" }
                }
            }
        },
        "/auth/validate": {
            "get": {
                "summary": "Validate API key",
                "tags": ["Auth"],
                "security": [{ "apiKeyAuth": [] }],
                "responses": {
                    "200": { "$ref": "#/components/responses/StandardResponse" },
                    "401": { "$ref": "#/components/responses/Unauthorized" }
                }
            }
        },
        "/auth/login": {
            "post": {
                "summary": "Login with email and password",
                "tags": ["Auth"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": { "schema": { "type": "object", "properties": {
                            "email": { "type": "string", "format": "email" },
                            "password": { "type": "string" }
                        }, "required": ["email", "password"] } }
                    }
                },
                "responses": {
                    "200": { "$ref": "#/components/responses/LoggedUser" },
                    "403": { "$ref": "#/components/responses/Forbidden" }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "summary": "Logout and invalidate session",
                "tags": ["Auth"],
                "responses": {
                    "200": { "$ref": "#/components/responses/StandardResponse" },
                    "400": { "$ref": "#/components/responses/BadRequest" }
                }
            }
        },
        "/auth/verify/telegram": {
            "post": {
                "summary": "Get Telegram verification data (using verify_token cookie)",
                "tags": ["Auth"],
                "responses": {
                    "200": { "$ref": "#/components/responses/StandardResponse" },
                    "400": { "$ref": "#/components/responses/BadRequest" },
                    "401": { "$ref": "#/components/responses/Unauthorized" }
                }
            }
        },
        "/auth/verify/validate": {
            "post": {
                "summary": "Validate verify token state",
                "tags": ["Auth"],
                "responses": {
                    "200": { "$ref": "#/components/responses/StandardResponse" },
                    "400": { "$ref": "#/components/responses/BadRequest" }
                }
            }
        },
        "/auth/verify/resendemail": {
            "post": {
                "summary": "Resend verification email",
                "tags": ["Auth"],
                "responses": {
                    "200": { "$ref": "#/components/responses/StandardResponse" },
                    "400": { "$ref": "#/components/responses/BadRequest" }
                }
            }
        },
        "/auth/verify/sendemail": {
            "post": {
                "summary": "Send verification email",
                "tags": ["Auth"],
                "responses": {
                    "200": { "$ref": "#/components/responses/StandardResponse" }
                }
            }
        },
        "/auth/verify/email": {
            "post": {
                "summary": "Verify email code",
                "tags": ["Auth"],
                "parameters": [{ "name": "code", "in": "query", "required": true, "schema": { "type": "string" } }],
                "responses": {
                    "200": { "$ref": "#/components/responses/StandardResponse" },
                    "400": { "$ref": "#/components/responses/BadRequest" },
                    "401": { "$ref": "#/components/responses/Unauthorized" }
                }
            }
        },
        "/auth/verify/token": {
            "get": {
                "summary": "Verify e-mail token via code (HTML response)",
                "tags": ["Auth"],
                "parameters": [{ "name": "code", "in": "query", "required": true, "schema": { "type": "string" } }],
                "responses": {
                    "200": { "description": "HTML page", "content": { "text/html": { "schema": { "type": "string" } } } },
                    "400": { "$ref": "#/components/responses/BadRequest" }
                }
            }
        },
        "/auth/register": {
            "post": {
                "summary": "Register a new user (DEV only)",
                "tags": ["Auth"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": { "schema": { "type": "object", "properties": {
                            "username": { "type": "string" },
                            "email": { "type": "string", "format": "email" },
                            "password": { "type": "string" },
                            "inviteCode": { "type": "string" }
                        }, "required": ["username", "email", "password", "inviteCode"] } }
                    }
                },
                "responses": {
                    "200": { "$ref": "#/components/responses/StandardResponse" },
                    "403": { "$ref": "#/components/responses/Forbidden" }
                }
            }
        },

        "/user/create": {
            "post": {
                "summary": "Create user (DEV only)",
                "tags": ["User"],
                "parameters": [
                    { "name": "username", "in": "query", "required": true, "schema": { "type": "string" } },
                    { "name": "password", "in": "query", "required": true, "schema": { "type": "string" } },
                    { "name": "email", "in": "query", "required": true, "schema": { "type": "string", "format": "email" } },
                    { "name": "test", "in": "query", "required": false, "schema": { "type": "boolean", "default": false } }
                ],
                "responses": {
                    "201": { "$ref": "#/components/responses/StandardResponse" },
                    "403": { "$ref": "#/components/responses/Forbidden" }
                }
            }
        },
        "/user/me/socials": {
            "patch": {
                "summary": "Update user's social links",
                "tags": ["User"],
                "security": [{ "apiKeyAuth": [] }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": { "schema": {
                            "type": "object",
                            "properties": {
                                "website": { "type": ["string", "null"] },
                                "twitter": { "type": ["string", "null"] },
                                "github": { "type": ["string", "null"] },
                                "gitlab": { "type": ["string", "null"] },
                                "discord": { "type": ["string", "null"] },
                                "telegram": { "type": ["string", "null"] },
                                "vk": { "type": ["string", "null"] },
                                "facebook": { "type": ["string", "null"] },
                                "instagram": { "type": ["string", "null"] },
                                "youtube": { "type": ["string", "null"] },
                                "twitch": { "type": ["string", "null"] },
                                "steam": { "type": ["string", "null"] },
                                "reddit": { "type": ["string", "null"] },
                                "linkedin": { "type": ["string", "null"] },
                                "tiktok": { "type": ["string", "null"] },
                                "snapchat": { "type": ["string", "null"] },
                                "whatsapp": { "type": ["string", "null"] },
                                "soundcloud": { "type": ["string", "null"] },
                                "spotify": { "type": ["string", "null"] },
                                "threads": { "type": ["string", "null"] },
                                "email": { "type": ["string", "null"] },
                                "messenger": { "type": ["string", "null"] }
                            }
                        } }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Socials updated",
                        "content": {
                            "application/json": {
                                "schema": { "$ref": "#/components/schemas/StandardResponseEnvelope" },
                                "example": { "error": false, "message": "Updated" }
                            }
                        }
                    }
                }
            }
        },
        "/user/get/@me": {
            "get": {
                "summary": "Get current user profile",
                "tags": ["User"],
                "security": [{ "apiKeyAuth": [] }],
                "responses": {
                    "200": { "$ref": "#/components/responses/LoggedUser" },
                    "401": { "$ref": "#/components/responses/Unauthorized" }
                }
            },
            "delete": {
                "summary": "Delete current user",
                "tags": ["User"],
                "security": [{ "apiKeyAuth": [] }],
                "parameters": [{ "name": "password", "in": "query", "required": true, "schema": { "type": "string" } }],
                "responses": {
                    "200": { "$ref": "#/components/responses/StandardResponse" },
                    "401": { "$ref": "#/components/responses/Unauthorized" }
                }
            }
        },
        "/user/get/@me/settings/webhook": {
            "get": {
                "summary": "Get current user's webhook settings",
                "tags": ["User"],
                "security": [{ "apiKeyAuth": [] }],
                "responses": {
                    "200": {
                        "description": "User webhook settings",
                        "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StandardResponseEnvelope" } } }
                    }
                }
            },
            "patch": {
                "summary": "Update current user's webhook settings",
                "tags": ["User"],
                "security": [{ "apiKeyAuth": [] }],
                "requestBody": {
                    "required": true,
                    "content": { "application/json": { "schema": {
                        "type": "object",
                        "properties": {
                            "enabled": { "type": "boolean" },
                            "color": { "type": ["string", "null"] },
                            "description": { "type": ["string", "null"] },
                            "title": { "type": ["string", "null"] },
                            "titleUrl": { "type": ["string", "null"], "format": "uri" },
                            "timestamp": { "type": "boolean" },
                            "authorName": { "type": ["string", "null"] }
                        }
                    } } }
                },
                "responses": {
                    "200": { "$ref": "#/components/responses/StandardResponse" }
                }
            }
        },
        "/user/get/@me/settings/url": {
            "get": {
                "summary": "Get current user's URL preferences",
                "tags": ["User"],
                "security": [{ "apiKeyAuth": [] }],
                "responses": {
                    "200": { "$ref": "#/components/responses/StandardResponse" }
                }
            },
            "patch": {
                "summary": "Update current user's URL preferences",
                "tags": ["User"],
                "security": [{ "apiKeyAuth": [] }],
                "requestBody": {
                    "required": true,
                    "content": { "application/json": { "schema": { "type": "object", "additionalProperties": { "type": "string" } } } }
                },
                "responses": {
                    "200": { "$ref": "#/components/responses/StandardResponse" }
                }
            }
        },
        "/user/get/{username}": {
            "get": {
                "summary": "Get user by username, email, or ID",
                "tags": ["User"],
                "security": [{ "apiKeyAuth": [] }],
                "parameters": [{ "name": "username", "in": "path", "required": true, "schema": { "type": "string" } }],
                "responses": {
                    "200": { "$ref": "#/components/responses/StandardResponse" },
                    "404": { "$ref": "#/components/responses/NotFound" }
                }
            }
        },

        "/stats/get": {
            "post": {
                "summary": "Get total stats for all segments in range",
                "tags": ["Stats"],
                "security": [{ "apiKeyAuth": [] }],
                "requestBody": {
                    "required": true,
                    "content": { "application/json": { "schema": {
                        "type": "object",
                        "properties": {
                            "preset": { "type": "string" },
                            "fromDate": { "type": "string", "format": "date-time" },
                            "toDate": { "type": "string", "format": "date-time" }
                        }
                    } } }
                },
                "responses": {
                    "200": { "$ref": "#/components/responses/StandardResponse" },
                    "400": { "$ref": "#/components/responses/BadRequest" },
                    "401": { "$ref": "#/components/responses/Unauthorized" }
                }
            }
        },
        "/stats/all": {
            "post": {
                "summary": "Get per-day stats for current user",
                "tags": ["Stats"],
                "security": [{ "apiKeyAuth": [] }],
                "requestBody": {
                    "required": false,
                    "content": { "application/json": { "schema": {
                        "type": "object",
                        "properties": {
                            "fromDate": { "type": "string", "format": "date-time" },
                            "toDate": { "type": "string", "format": "date-time" },
                            "limit": { "type": "integer" },
                            "fillMissing": { "type": "boolean" }
                        }
                    } } }
                },
                "responses": {
                    "200": {
                        "description": "Stats for the requested range",
                        "content": {
                            "application/json": {
                                "schema": { "$ref": "#/components/schemas/StandardResponseEnvelope" }
                            }
                        }
                    },
                    "401": { "$ref": "#/components/responses/Unauthorized" }
                }
            }
        },

        "/email/send": {
            "post": {
                "summary": "Send an email (service-to-service)",
                "tags": ["Email"],
                "security": [{ "apiKeyAuth": [] }],
                "requestBody": {
                    "required": true,
                    "content": { "application/json": { "schema": {
                        "type": "object",
                        "properties": {
                            "from": { "type": "string" },
                            "to": { "type": "string" },
                            "subject": { "type": "string" },
                            "content": { "type": "string" }
                        },
                        "required": ["from", "to", "subject", "content"]
                    } } }
                },
                "responses": {
                    "200": { "description": "Email sent", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StandardResponseEnvelope" } } } },
                    "400": { "$ref": "#/components/responses/BadRequest" }
                }
            }
        },
        "/email/getmissing": {
            "post": {
                "summary": "Get missing inbound emails for a temp mailbox",
                "tags": ["Email"],
                "security": [{ "apiKeyAuth": [] }],
                "requestBody": {
                    "required": true,
                    "content": { "application/json": { "schema": {
                        "type": "object",
                        "properties": {
                            "mail": { "type": "string" },
                            "messageIds": { "type": "array", "items": { "type": "string" } }
                        },
                        "required": ["mail", "messageIds"]
                    } } }
                },
                "responses": {
                    "200": { "description": "Missing emails", "content": { "application/json": { "schema": { "type": "array", "items": { "type": "object" } } } } },
                    "401": { "$ref": "#/components/responses/Unauthorized" },
                    "404": { "$ref": "#/components/responses/NotFound" }
                }
            }
        },
        "/email/inbound": {
            "post": {
                "summary": "Inbound email webhook",
                "tags": ["Email"],
                "parameters": [{ "name": "X-Email-Token", "in": "header", "required": false, "schema": { "type": "string" } }],
                "requestBody": { "required": true, "content": { "application/json": { "schema": { "type": "object" } } } },
                "responses": { "200": { "description": "ok" }, "401": { "$ref": "#/components/responses/Unauthorized" } }
            }
        },
        "/email/create": {
            "post": {
                "summary": "Create a temporary email address",
                "tags": ["Email"],
                "security": [{ "apiKeyAuth": [] }],
                "responses": {
                    "200": { "$ref": "#/components/responses/StandardResponse" },
                    "401": { "$ref": "#/components/responses/Unauthorized" }
                }
            }
        },

        "/discord/get/@me": {
            "get": {
                "summary": "Get my Discord connection",
                "tags": ["Discord"],
                "security": [{ "apiKeyAuth": [] }],
                "responses": {
                    "200": { "$ref": "#/components/responses/StandardResponse" },
                    "401": { "$ref": "#/components/responses/Unauthorized" }
                }
            },
            "delete": {
                "summary": "Deauthorize my Discord connection",
                "tags": ["Discord"],
                "security": [{ "apiKeyAuth": [] }],
                "responses": {
                    "200": { "$ref": "#/components/responses/StandardResponse" },
                    "401": { "$ref": "#/components/responses/Unauthorized" }
                }
            }
        },
        "/discord/get/{discordId}": {
            "get": {
                "summary": "Get Discord connection by Discord ID",
                "tags": ["Discord"],
                "security": [{ "apiKeyAuth": [] }],
                "parameters": [{ "name": "discordId", "in": "path", "required": true, "schema": { "type": "string" } }],
                "responses": {
                    "200": { "$ref": "#/components/responses/StandardResponse" },
                    "404": { "$ref": "#/components/responses/NotFound" }
                }
            }
        },
        "/discord/token/{token}": {
            "delete": {
                "summary": "Revoke a Discord auth token",
                "tags": ["Discord"],
                "security": [{ "apiKeyAuth": [] }],
                "parameters": [{ "name": "token", "in": "path", "required": true, "schema": { "type": "string" } }],
                "responses": { "200": { "$ref": "#/components/responses/StandardResponse" } }
            }
        },
        "/discord/authorize": {
            "post": {
                "summary": "Authorize Discord connection",
                "tags": ["Discord"],
                "security": [{ "apiKeyAuth": [] }],
                "requestBody": {
                    "required": true,
                    "content": { "application/json": { "schema": {
                        "type": "object",
                        "properties": {
                            "accessToken": { "type": "string" },
                            "refreshToken": { "type": "string" },
                            "expiresAt": { "type": "integer", "description": "seconds from now" }
                        },
                        "required": ["accessToken"]
                    } } }
                },
                "responses": { "200": { "$ref": "#/components/responses/StandardResponse" } }
            }
        },
        "/discord/login": {
            "post": {
                "summary": "Login via Discord access token (sets session cookie)",
                "tags": ["Discord"],
                "security": [{ "apiKeyAuth": [] }],
                "requestBody": {
                    "required": true,
                    "content": { "application/json": { "schema": { "type": "object", "properties": { "accessToken": { "type": "string" } }, "required": ["accessToken"] } } }
                },
                "responses": { "200": { "$ref": "#/components/responses/StandardResponse" }, "400": { "$ref": "#/components/responses/BadRequest" } }
            }
        },

        "/admin/user/{uid}/images": {
            "get": {
                "summary": "Get images by user (admin)",
                "tags": ["AdminUser"],
                "security": [{ "apiKeyAuth": [] }],
                "parameters": [
                    { "name": "uid", "in": "path", "required": true, "schema": { "type": "integer", "format": "int64" } },
                    { "name": "from", "in": "query", "required": false, "schema": { "type": "integer", "format": "int64" } },
                    { "name": "to", "in": "query", "required": false, "schema": { "type": "integer", "format": "int64" } },
                    { "name": "limit", "in": "query", "required": false, "schema": { "type": "integer" } }
                ],
                "responses": { "200": { "$ref": "#/components/responses/StandardResponse" }, "404": { "$ref": "#/components/responses/NotFound" } }
            }
        },
        "/admin/user/{uid}/pastes": {
            "get": {
                "summary": "Get pastes by user (admin)",
                "tags": ["AdminUser"],
                "security": [{ "apiKeyAuth": [] }],
                "parameters": [{ "name": "uid", "in": "path", "required": true, "schema": { "type": "integer", "format": "int64" } }],
                "responses": { "200": { "$ref": "#/components/responses/StandardResponse" }, "404": { "$ref": "#/components/responses/NotFound" } }
            }
        },
        "/admin/user/{uid}/urls": {
            "get": {
                "summary": "Get short URLs by user (admin)",
                "tags": ["AdminUser"],
                "security": [{ "apiKeyAuth": [] }],
                "parameters": [
                    { "name": "uid", "in": "path", "required": true, "schema": { "type": "integer", "format": "int64" } },
                    { "name": "logs", "in": "query", "required": false, "schema": { "type": "boolean", "default": false } }
                ],
                "responses": { "200": { "$ref": "#/components/responses/StandardResponse" }, "404": { "$ref": "#/components/responses/NotFound" } }
            }
        },
        "/admin/image/get/{uniqueId}": {
            "get": {
                "summary": "Get image (admin, placeholder)",
                "tags": ["AdminImage"],
                "security": [{ "apiKeyAuth": [] }],
                "parameters": [
                    { "name": "uniqueId", "in": "path", "required": true, "schema": { "type": "string" } },
                    { "name": "base64", "in": "query", "schema": { "type": "boolean", "default": false } },
                    { "name": "raw", "in": "query", "schema": { "type": "boolean", "default": false } },
                    { "name": "uploader_info", "in": "query", "schema": { "type": "boolean", "default": false } },
                    { "name": "image_info", "in": "query", "schema": { "type": "boolean", "default": false } },
                    { "name": "info", "in": "query", "schema": { "type": "boolean", "default": false } }
                ],
                "responses": { "200": { "$ref": "#/components/responses/StandardResponse" } }
            }
        },
        "/admin/invite/create": {
            "post": {
                "summary": "Create invite codes (admin)",
                "tags": ["AdminInvite"],
                "security": [{ "apiKeyAuth": [] }],
                "parameters": [
                    { "name": "code", "in": "query", "required": false, "schema": { "type": "string", "minLength": 3 } },
                    { "name": "amount", "in": "query", "required": false, "schema": { "type": "integer", "minimum": 1 } }
                ],
                "responses": { "202": { "$ref": "#/components/responses/StandardResponse" }, "400": { "$ref": "#/components/responses/BadRequest" } }
            }
        },

        "/web/xap3y/render/{id}": {
            "get": {
                "summary": "Debug render (non-API test route)",
                "tags": ["Basic"],
                "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
                "responses": { "500": { "$ref": "#/components/responses/InternalError" } }
            }
        },
        "/": {
            "get": {
                "summary": "Root service status",
                "tags": ["Basic"],
                "responses": {
                    "200": { "description": "Status JSON", "content": { "application/json": { "schema": { "type": "object" } } } }
                }
            }
        },
        "/status": {
            "get": {
                "summary": "Service status (alias)",
                "tags": ["Basic"],
                "responses": { "200": { "description": "Status JSON" } }
            }
        },
        "/.env": {
            "get": {
                "summary": "Fake env (honeypot)",
                "tags": ["Basic"],
                "responses": { "200": { "description": "Fake env JSON" } }
            }
        },
        "/test-csrf": {
            "get": { "summary": "CSRF test (GET)", "tags": ["Basic"], "responses": { "200": { "$ref": "#/components/responses/StandardResponse" } } },
            "post": { "summary": "CSRF test (POST)", "tags": ["Basic"], "responses": { "200": { "$ref": "#/components/responses/StandardResponse" } } }
        },
        "/r/{id}": {
            "get": {
                "summary": "Host-based redirect",
                "tags": ["Basic"],
                "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
                "responses": { "301": { "description": "Redirect" }, "404": { "$ref": "#/components/responses/NotFound" } }
            }
        },
        "/error": {
            "get": { "summary": "Error endpoint", "tags": ["Basic"], "responses": { "404": { "$ref": "#/components/responses/NotFound" } } }
        },
        "/metrics": {
            "get": {
                "summary": "Service metrics snapshot",
                "tags": ["Basic"],
                "responses": { "200": { "description": "Metrics JSON" } }
            }
        },

        "/web/error400": { "get": { "summary": "400 page", "tags": ["Web"], "responses": { "302": { "description": "Redirect" }, "200": { "description": "HTML", "content": { "text/html": { "schema": { "type": "string" } } } } } } },
        "/web/apidocs": { "get": { "summary": "API docs page", "tags": ["Web"], "responses": { "200": { "description": "HTML", "content": { "text/html": { "schema": { "type": "string" } } } } } } },
        "/web/error404": { "get": { "summary": "404 page", "tags": ["Web"], "responses": { "200": { "description": "HTML", "content": { "text/html": { "schema": { "type": "string" } } } } } } },
        "/web/error500": { "get": { "summary": "500 page", "tags": ["Web"], "responses": { "200": { "description": "HTML", "content": { "text/html": { "schema": { "type": "string" } } } } } } },
        "/web/image-upload": { "get": { "summary": "Image upload page", "tags": ["Web"], "responses": { "200": { "description": "HTML", "content": { "text/html": { "schema": { "type": "string" } } } } } } },
        "/web/image-render/{id}": {
            "get": {
                "summary": "Render image page",
                "tags": ["Web"],
                "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
                "responses": { "200": { "description": "HTML", "content": { "text/html": { "schema": { "type": "string" } } } }, "404": { "$ref": "#/components/responses/NotFound" } }
            }
        },
        "/web/image-render": { "get": { "summary": "Render image default page", "tags": ["Web"], "responses": { "200": { "description": "HTML" } } } },
        "/web/paste-create": { "get": { "summary": "Create paste page", "tags": ["Web"], "responses": { "200": { "description": "HTML" } } } },
        "/web/url-create": { "get": { "summary": "Create URL page", "tags": ["Web"], "responses": { "200": { "description": "HTML" } } } },
        "/web/paste-render/{id}": {
            "get": {
                "summary": "Render paste page",
                "tags": ["Web"],
                "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
                "responses": { "200": { "description": "HTML" }, "404": { "$ref": "#/components/responses/NotFound" } }
            }
        },
        "/web/url-render/{id}": {
            "get": {
                "summary": "Render short URL page",
                "tags": ["Web"],
                "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
                "responses": { "200": { "description": "HTML" }, "404": { "$ref": "#/components/responses/NotFound" } }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "apiKeyAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "X-API-Key",
                "description": "Provide your API key in the X-API-Key header."
            }
        },
        "responses": {
            "StandardResponse": {
                "description": "Standard API response",
                "content": {
                    "application/json": { "schema": { "$ref": "#/components/schemas/StandardResponseEnvelope" } }
                }
            },
            "UploadedResource": {
                "description": "Uploaded image resource response",
                "content": {
                    "application/json": {
                        "schema": {
                            "allOf": [
                                { "$ref": "#/components/schemas/StandardResponseEnvelope" },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "properties": {
                                                "uniqueId": { "type": "string" },
                                                "url": { "type": "string", "format": "uri" },
                                                "description": { "type": ["string", "null"] },
                                                "size": { "type": "integer", "format": "int64" },
                                                "uploadedAt": { "type": "string", "format": "date-time" },
                                                "expiresAt": { "type": ["string", "null"], "format": "date-time" },
                                                "urlSet": { "$ref": "#/components/schemas/UrlSet" },
                                                "uploader": { "$ref": "#/components/schemas/Uploader" },
                                                "requiresPassword": { "type": "boolean" },
                                                "isPublic": { "type": "boolean" }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "UploadedResourcePaste": {
                "description": "Paste resource response",
                "content": {
                    "application/json": {
                        "schema": {
                            "allOf": [
                                { "$ref": "#/components/schemas/StandardResponseEnvelope" },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "properties": {
                                                "title": { "type": ["string", "null"] },
                                                "content": { "type": "string" },
                                                "createdAt": { "type": "string", "format": "date-time" },
                                                "urlSet": { "$ref": "#/components/schemas/UrlSet" },
                                                "uploader": { "$ref": "#/components/schemas/Uploader" },
                                                "requiresPassword": { "type": "boolean" },
                                                "isPublic": { "type": "boolean" }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "UploadedResourceShortUrl": {
                "description": "Short URL resource response",
                "content": {
                    "application/json": {
                        "schema": {
                            "allOf": [
                                { "$ref": "#/components/schemas/StandardResponseEnvelope" },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "properties": {
                                                "uniqueId": { "type": "string" },
                                                "originalUrl": { "type": "string" },
                                                "visits": { "type": "integer" },
                                                "maxUses": { "type": "integer", "default": -1 },
                                                "createdAt": { "type": "string", "format": "date-time" },
                                                "expiresAt": { "type": ["string", "null"], "format": "date-time" },
                                                "urlSet": { "$ref": "#/components/schemas/UrlSet" },
                                                "uploader": { "$ref": "#/components/schemas/Uploader" }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "LoggedUser": {
                "description": "Logged-in user response",
                "content": {
                    "application/json": {
                        "schema": {
                            "allOf": [
                                { "$ref": "#/components/schemas/StandardResponseEnvelope" },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "properties": {
                                                "id": { "type": "integer" },
                                                "username": { "type": "string" },
                                                "email": { "type": "string", "format": "email" },
                                                "role": { "type": "string", "enum": ["OWNER", "ADMIN", "USER", "TESTER"] },
                                                "apiKey": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": { "type": "integer" },
                                                        "keyCode": { "type": "string" },
                                                        "maxUploadSize": { "type": "integer", "default": -1 }
                                                    }
                                                },
                                                "avatar": { "type": ["string", "null"] },
                                                "invitedBy": { "$ref": "#/components/schemas/Invitor" },
                                                "createdAt": { "type": "string", "format": "date-time" }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "BadRequest": {
                "description": "Bad request",
                "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StandardResponseEnvelope" } } }
            },
            "Unauthorized": {
                "description": "Unauthorized or invalid API key",
                "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StandardResponseEnvelope" } } }
            },
            "Forbidden": {
                "description": "Forbidden",
                "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StandardResponseEnvelope" } } }
            },
            "NotFound": {
                "description": "Not found",
                "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StandardResponseEnvelope" } } }
            },
            "InternalError": {
                "description": "Internal server error",
                "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StandardResponseEnvelope" } } }
            }
        },
        "schemas": {
            "StandardResponseEnvelope": {
                "type": "object",
                "properties": {
                    "error": { "type": "boolean" },
                    "message": {},
                    "timestamp": { "type": "string", "format": "date-time" },
                    "uniqueId": { "type": ["string", "null"] }
                }
            },
            "UrlSet": {
                "type": "object",
                "properties": {
                    "webUrl": { "type": "string", "format": "uri" },
                    "portalUrl": { "type": "string", "format": "uri" },
                    "rawUrl": { "type": "string", "format": "uri" },
                    "shortUrl": { "type": "string", "format": "uri" },
                    "customUrl": { "type": "string", "format": "uri" }
                }
            },
            "Uploader": {
                "type": "object",
                "properties": {
                    "uid": { "type": "integer" },
                    "username": { "type": "string" },
                    "role": { "type": "string", "enum": ["OWNER", "ADMIN", "USER", "TESTER"] },
                    "avatar": { "type": ["string", "null"], "format": "uri" },
                    "createdAt": { "type": "string", "format": "date-time" },
                    "invitor": { "$ref": "#/components/schemas/Invitor" }
                }
            },
            "Invitor": {
                "type": "object",
                "properties": {
                    "uid": { "type": "integer" },
                    "username": { "type": "string" },
                    "role": { "type": "string", "enum": ["OWNER", "ADMIN", "USER", "TESTER"] },
                    "avatar": { "type": ["string", "null"], "format": "uri" },
                    "createdAt": { "type": "string", "format": "date-time" }
                }
            }
        }
    },
    "security": [
        { "apiKeyAuth": [] }
    ],
    "tags": [
        { "name": "Image" },
        { "name": "ImagePlaylist" },
        { "name": "Paste" },
        { "name": "Url" },
        { "name": "Auth" },
        { "name": "User" },
        { "name": "Stats" },
        { "name": "Email" },
        { "name": "Discord" },
        { "name": "AdminUser" },
        { "name": "AdminImage" },
        { "name": "AdminInvite" },
        { "name": "Basic" },
        { "name": "Web" }
    ]
}